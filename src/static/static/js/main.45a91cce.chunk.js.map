{"version":3,"sources":["Utilities/Constants.js","Utilities/Requests.js","Context/UserContext.js","Context/LayoutContext.js","panelLayout/Loading/Loading.js","panelLayout/Header.js","panelLayout/Sidebar.js","panelLayout/Layout.js","panelLayout/Breadcrumb.js","panelLayout/index.js","Utilities/DateUtilities.js","Pages/Invoices/Invoices.js","Pages/Payments/Payments.js","Pages/Invoice/Invoice.js","Pages/ContainerForm/ContainerForm.js","Components/TextInput/TextInput.js","Components/SubmitButton/SubmitButton.js","Pages/UpdateUser/UpdateUser.js","Components/UsernameInput/UsernameInput.js","Components/PasswordInput/PasswordInput.js","Forms/SignIn/SignIn.js","Components/EmailInput/EmailInput.js","Forms/SignUp/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["Constants","production","developerMode","appURL","configServerURL","Requests","post","url","payload","a","headers","localStorage","getItem","axios","response","get","put","delete","deleteWPayload","UserContext","React","createContext","Provider","UserProvider","Consumer","children","useState","package","user","setUser","useEffect","setTimeout","userID","name","signUpUser","email","password","signInUser","username","data","access_token","setItem","console","log","signOutUser","removeItem","value","isAnUserAuthenticated","LayoutContext","LayoutProvider","loadingVisible","setLoadingVisible","toggledMenu","setToggledMenu","Loading","props","id","className","visible","Header","title","setRedirect","useContext","Fragment","to","onClick","strategies","length","href","role","data-toggle","src","width","alt","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","points","x1","y1","x2","y2","Sidebar","location","useLocation","pathname","admin","PanelLayout","undefined","redirect","Breadcrumb","pageTitles","map","i","meses","dias","dateWithFormatFromTime","param","fecha","Date","getDay","getDate","getMonth","getFullYear","Invoices","invoices","Object","keys","index","invoice","cancelled","paid","createdAt","amount","subject","status","Payments","payments","total","setTotal","totalPayments","payment","pending","stroke-width","stroke-linecap","stroke-linejoin","style","maxWidth","Invoice","invoiceID","useParams","cancelPackageRequestFromUser","packageName","packageID","action","method","type","window","origin","generated","data-target","display","aria-hidden","data-dismiss","ContainerForm","TextInput","label","placeholder","onChange","required","pattern","SubmitButton","UpdateUser","updateUserInfo","errorField","seterrorField","telegramID","userInfo","setUserInfo","OnSubmit","event","preventDefault","trim","result","OnChangeText","target","onSubmit","UsernameInput","PasswordInput","confirmation","SignIn","message","EmailInput","SignUp","passwordConfirmation","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45a91cce.chunk.js","sourcesContent":["const Constants = {\r\n    production: false,\r\n    developerMode: false,\r\n    appURL: () => {\r\n        if (Constants.production) {\r\n            return \"https://regasi.herokuapp.com\";\r\n        } else {\r\n            return \"http://localhost:3000\";\r\n        }\r\n    },\r\n    configServerURL: () => {\r\n        if (Constants.production) {\r\n            return Constants.developerMode ? \"https://regasi.herokuapp.com\" : \"https://regasi.herokuapp.com\";\r\n        } else {\r\n            return \"http://localhost:5000\";\r\n        }\r\n    },\r\n};\r\n\r\nexport default Constants;\r\n","import * as axios from \"axios\";\r\nimport Constants from \"./Constants\";\r\n\r\nconst Requests = {\r\n    post: async (url, payload) => {\r\n        const headers =\r\n            localStorage.getItem(\"Authorization\") && localStorage.getItem(\"Authorization\") !== \"null\"\r\n                ? { \"Authorization\": localStorage.getItem(\"Authorization\") }\r\n                : {};\r\n        const response = await axios.post(Constants.configServerURL() + \"/\" + url, payload, { headers });\r\n        return response;\r\n    },\r\n    get: async (url) => {\r\n        const headers =\r\n            localStorage.getItem(\"Authorization\") && localStorage.getItem(\"Authorization\") !== \"null\"\r\n                ? { \"Authorization\": localStorage.getItem(\"Authorization\") }\r\n                : {};\r\n        const response = await axios.get(Constants.configServerURL() + \"/\" + url, { headers });\r\n        return response;\r\n    },\r\n    put: async (url, payload) => {\r\n        const headers =\r\n            localStorage.getItem(\"Authorization\") && localStorage.getItem(\"Authorization\") !== \"null\"\r\n                ? { \"Authorization\": localStorage.getItem(\"Authorization\") }\r\n                : {};\r\n        const response = await axios.put(Constants.configServerURL() + \"/\" + url, payload, { headers });\r\n        return response;\r\n    },\r\n    delete: async (url) => {\r\n        const headers = localStorage.getItem(\"Authorization\")\r\n            ? { \"Authorization\": localStorage.getItem(\"Authorization\") }\r\n            : {};\r\n        const response = await axios.delete(Constants.configServerURL() + \"/\" + url, { headers });\r\n        return response;\r\n    },\r\n    deleteWPayload: async (url, payload) => {\r\n        const headers =\r\n            localStorage.getItem(\"Authorization\") && localStorage.getItem(\"Authorization\") !== \"null\"\r\n                ? { \"Authorization\": localStorage.getItem(\"Authorization\") }\r\n                : {};\r\n        const response = await axios.delete(Constants.configServerURL() + \"/\" + url, payload, { headers });\r\n        return response;\r\n    },\r\n};\r\nexport default Requests;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Requests from \"../Utilities/Requests\";\r\n\r\nconst UserContext = React.createContext();\r\nconst { Provider, Consumer } = UserContext;\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState({package:{}});\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setUser({userID : \"Usuario\", name: \"Usuario\", package:{}})\r\n        }, 3000)\r\n    }, [])\r\n\r\n    const isAnUserAuthenticated = () => {\r\n        return !!localStorage.getItem(\"Authorization\");\r\n    };\r\n\r\n    const signUpUser = async (email, password, name) => {};\r\n\r\n    const updateUserInfo = async (name, telegramID) => {};\r\n\r\n    const signInUser = async (username, password) => {\r\n        try {\r\n            const response = await Requests.post(\"auth\", { username, password });\r\n            if (!response.data.access_token) return false;\r\n            localStorage.setItem(\"Authorization\", response.data.access_token);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(\"Error on signInUser\");\r\n            console.log(\"Error: \", error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const signOutUser = async () => {\r\n        localStorage.removeItem(\"Authorization\");\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <Provider\r\n            value={{\r\n                user,\r\n                signInUser,\r\n                signUpUser,\r\n                isAnUserAuthenticated,\r\n                signOutUser,\r\n            }}\r\n        >\r\n            {children}\r\n        </Provider>\r\n    );\r\n};\r\nexport { UserProvider, Consumer as UserConsumer, UserContext };\r\n","import React, { useState } from \"react\"\r\n\r\nconst LayoutContext = React.createContext()\r\nconst { Provider, Consumer } = LayoutContext\r\n\r\nconst LayoutProvider = ({ children }) => {\r\n    const [loadingVisible, setLoadingVisible] = useState(false)\r\n\r\n    const [toggledMenu, setToggledMenu] = useState(false)\r\n\r\n    return <Provider value={{ loadingVisible, setLoadingVisible, toggledMenu, setToggledMenu }}>{children}</Provider>\r\n}\r\n\r\nexport { LayoutProvider, Consumer as LayoutConsumer, LayoutContext }\r\n","import React from \"react\"\r\nimport \"./Loading.css\"\r\n\r\nexport default function Loading(props) {\r\n    return (\r\n        <div id=\"loading\" className={`${props.visible ? \"visible\" : \"\"}`}>\r\n            <div className=\"sk-three-bounce\">\r\n                <div className=\"sk-child sk-bounce1\"></div>\r\n                <div className=\"sk-child sk-bounce2\"></div>\r\n                <div className=\"sk-child sk-bounce3\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { UserContext } from \"../Context/UserContext\"\r\nimport { LayoutContext } from \"../Context/LayoutContext\"\r\n\r\nexport default function Header({ title = \"Pagina\", setRedirect }) {\r\n    const { user, signOutUser } = useContext(UserContext)\r\n    const { toggledMenu, setToggledMenu } = useContext(LayoutContext)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"nav-header\">\r\n                <NavLink to=\"/\" className=\"brand-logo\">\r\n                    {/* {toggledMenu ? \r\n                        <img width=\"80px\" className=\"logo-abbr\" src=\"/images/logo.png\" alt=\"\" />\r\n                        :\r\n                        <React.Fragment>\r\n                        <img width=\"80px\" style={{display: \"none\"}} className=\"logo-abbr\" src=\"/images/logo.png\" alt=\"\" />\r\n                        <img className=\"brand-title\" style={{ maxWidth: \"90%\", height: \"auto\", margin: \"5px 0\" }} src=\"/images/horizontal.png\" alt=\"\" />\r\n                        </React.Fragment>\r\n                    } */}\r\n                    {/* <img className=\"logo-compact\" src=\"./images/logo.png\" alt=\"\" />\r\n                    <img className=\"brand-title\" src=\"./images/horizontal.png\" alt=\"\" /> */}\r\n                </NavLink>\r\n\r\n                <div className=\"nav-control\" onClick={() => {setToggledMenu(!toggledMenu)}}>\r\n                    <div className={`hamburger ${toggledMenu ? \"is-active\" : \"\"}`}>\r\n                        <span className=\"line\"></span>\r\n                        <span className=\"line\"></span>\r\n                        <span className=\"line\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header\">\r\n                <div className=\"header-content\">\r\n                    <nav className=\"navbar navbar-expand\">\r\n                        <div className=\"collapse navbar-collapse justify-content-between\">\r\n                            <div className=\"header-left\">\r\n                                <div className=\"dashboard_bar\">{title}</div>\r\n                            </div>\r\n\r\n                            <ul className=\"navbar-nav header-right\">\r\n                                <li className=\"nav-item dropdown notification_dropdown\">\r\n                                    <a className=\"nav-link  ai-icon\">\r\n                                        <i className=\"flaticon-381-networking\"></i>\r\n                                        <span className=\"badge light text-white bg-primary\">\r\n                                            {user.strategies ? user.strategies.length : 0}\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item dropdown header-profile\">\r\n                                    <a className=\"nav-link\" href=\"#\" role=\"button\" data-toggle=\"dropdown\">\r\n                                        <div className=\"header-info\">\r\n                                            <span className=\"text-black\">\r\n                                                Hola, <strong>{user.name}</strong>\r\n                                            </span>\r\n                                            <p className=\"fs-12 mb-0\">{user.package.name}</p>\r\n                                        </div>\r\n                                        <img src=\"/images/profile/pic1.jpg\" width=\"20\" alt=\"\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                        <NavLink to=\"/updateUser\" className=\"dropdown-item ai-icon\">\r\n                                            <svg\r\n                                                id=\"icon-user1\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                className=\"text-primary\"\r\n                                                width=\"18\"\r\n                                                height=\"18\"\r\n                                                viewBox=\"0 0 24 24\"\r\n                                                fill=\"none\"\r\n                                                stroke=\"currentColor\"\r\n                                                strokeWidth=\"2\"\r\n                                                strokeLinecap=\"round\"\r\n                                                strokeLinejoin=\"round\"\r\n                                            >\r\n                                                <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                                                <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                                            </svg>\r\n                                            <span className=\"ml-2\">Perfil</span>\r\n                                        </NavLink>\r\n                                        <a href=\"#\" className=\"dropdown-item ai-icon\" onClick={signOutUser}>\r\n                                            <svg\r\n                                                id=\"icon-logout\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                className=\"text-danger\"\r\n                                                width=\"18\"\r\n                                                height=\"18\"\r\n                                                viewBox=\"0 0 24 24\"\r\n                                                fill=\"none\"\r\n                                                stroke=\"currentColor\"\r\n                                                strokeWidth=\"2\"\r\n                                                strokeLinecap=\"round\"\r\n                                                strokeLinejoin=\"round\"\r\n                                            >\r\n                                                <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>\r\n                                                <polyline points=\"16 17 21 12 16 7\"></polyline>\r\n                                                <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>\r\n                                            </svg>\r\n                                            <span className=\"ml-2\" onClick={() => {setRedirect(true)}}>Logout </span>\r\n                                        </a>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../Context/UserContext\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nexport default function Sidebar() {\r\n    const location = useLocation();\r\n    const { user } = useContext(UserContext);\r\n    return (\r\n        <div className=\"deznav\">\r\n            <div className=\"deznav-scroll\">\r\n                <ul className=\"metismenu\" id=\"menu\">\r\n                    <React.Fragment>\r\n                        <li className={location.pathname === \"/\" ? \"mm-active active-no-child\" : \"\"}>\r\n                            <NavLink to=\"/\" className=\"ai-icon\">\r\n                                <i className=\"flaticon-381-home-2\"></i>\r\n                                <span className=\"nav-text\">Inicio</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={location.pathname === \"/strategies\" ? \"mm-active active-no-child\" : \"\"}>\r\n                            <NavLink to=\"/strategies\" className=\"ai-icon\">\r\n                                <i className=\"flaticon-381-list-1\"></i>\r\n                                <span className=\"nav-text\">Horarios</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={location.pathname === \"/prices\" ? \"mm-active active-no-child\" : \"\"}>\r\n                            <NavLink to=\"/prices\" className=\"ai-icon\">\r\n                                <i className=\"flaticon-381-box-2\"></i>\r\n                                <span className=\"nav-text\">Incidencias</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={location.pathname === \"/invoices\" ? \"mm-active active-no-child\" : \"\"}>\r\n                            <NavLink to=\"/invoices\" className=\"ai-icon\">\r\n                                <i className=\"flaticon-381-notepad-1\"></i>\r\n                                <span className=\"nav-text\">Asistencias</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={location.pathname === \"/tree\" ? \"mm-active active-no-child\" : \"\"}>\r\n                            <NavLink to=\"/tree\" className=\"ai-icon\">\r\n                                <i className=\"flaticon-381-user-9\"></i>\r\n                                <span className=\"nav-text\">Usuarios</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        {user.admin && (\r\n                            <li\r\n                                className={\r\n                                    location.pathname ===\r\n                                    \"/hwaefiuwevniawuebiwuefhnvawnecnwieihaefnwevnrbviuhwaefiuhwilencbvbwehfiwwejfjnivejn\"\r\n                                        ? \"mm-active active-no-child\"\r\n                                        : \"\"\r\n                                }\r\n                            >\r\n                                <NavLink\r\n                                    to=\"/hwaefiuwevniawuebiwuefhnvawnecnwieihaefnwevnrbviuhwaefiuhwilencbvbwehfiwwejfjnivejn\"\r\n                                    className=\"ai-icon\"\r\n                                >\r\n                                    <i className=\"flaticon-381-notepad\"></i>\r\n                                    <span className=\"nav-text\">Administrar pagos</span>\r\n                                </NavLink>\r\n                            </li>\r\n                        )}\r\n                    </React.Fragment>\r\n                </ul>\r\n\r\n                <div className=\"copyright\">\r\n                    <p>\r\n                        <strong>CriptoEstrategias</strong> © 2021 Todos los derechos reservados\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\"\r\nimport { UserContext } from \"../Context/UserContext\"\r\nimport { LayoutContext } from \"../Context/LayoutContext\"\r\nimport Loading from \"./Loading/Loading\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Header from \"./Header\"\r\nimport Sidebar from \"./Sidebar\"\r\nimport \"./Layout.css\"\r\n\r\nexport default function PanelLayout({ title, children }) {\r\n    const { user, isAnUserAuthenticated } = useContext(UserContext)\r\n    const { loadingVisible, toggledMenu } = useContext(LayoutContext)\r\n\r\n    const [redirect, setRedirect] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        setRedirect(!isAnUserAuthenticated())\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Loading visible={loadingVisible} />\r\n            <div id=\"main-wrapper\" className={`show ${toggledMenu ? \"menu-toggle\" : \"\"}`}>\r\n                {redirect === undefined ? (\r\n                    <div></div>\r\n                ) : redirect ? (\r\n                    <Redirect to=\"/signin\" />\r\n                ) : user.userID ? (\r\n                    <React.Fragment>\r\n                        <Header title={title} setRedirect={setRedirect} />\r\n                        <Sidebar />\r\n                        {children}\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <React.Fragment>\r\n                        <Loading visible={true} />\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function Breadcrumb({ pageTitles }) {\r\n    return (\r\n        <React.Fragment>\r\n            {pageTitles && pageTitles[0] ? (\r\n                <div className=\"page-titles\">\r\n                    <ol className=\"breadcrumb\">\r\n                        {pageTitles.map((title, i) => {\r\n                            return (\r\n                                <li className={`breadcrumb-item ${i === pageTitles.length - 1 ? \"active\" : \"\"}`} key={i}>\r\n                                    <a>{title}</a>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ol>\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { UserContext } from \"../Context/UserContext\"\r\nimport Layout from \"./Layout\"\r\nimport Breadcrumb from \"./Breadcrumb\"\r\n\r\nexport default function PanelLayout() {\r\n    const { user } = useContext(UserContext)\r\n\r\n    return (\r\n        <Layout title=\"Dashboard\">\r\n            <div className=\"content-body\">\r\n                <div className=\"container-fluid\">\r\n                    <Breadcrumb pageTitles={[\"Inicio\"]} />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n","const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp)\r\n\r\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`\r\n}\r\n\r\n\r\nconst meses = [\r\n    'Enero',\r\n   'Febrero',\r\n    'Marzo',\r\n   'Abril',\r\n   'Mayo',\r\n   'Junio',\r\n    'Julio',\r\n   'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n   'Noviembre',\r\n   'Diciembre',\r\n]\r\nconst dias = [\"Domingo\", \"Lunes\", \"Martes\", \"Miércoles\", \"Jueves\", \"Viernes\", \"Sábado\"]\r\nconst dateWithFormat = (param) => {\r\n   //let fecha = new Date(param)\r\n   var fecha = new Date(0); // The 0 there is the key, which sets the date to the epoch\r\n   fecha.setUTCSeconds(param);    \r\n   //console.warn(\"fecha\", fecha, fecha.getDay())\r\n   return dias[fecha.getDay()]+\" \"+fecha.getDate()+\" de \"+meses[fecha.getMonth()]+\" del \"+fecha.getFullYear()\r\n}\r\nconst dateWithFormatFromTime = (param) => {\r\n   let fecha = new Date(param)\r\n   //console.warn(\"fecha\", fecha, fecha.getDay())\r\n   return dias[fecha.getDay()]+\" \"+fecha.getDate()+\"/\"+meses[fecha.getMonth()]+\"/\"+fecha.getFullYear()\r\n}\r\nconst dateWithNumberFormatFromTime = (param) => {\r\n   let fecha = new Date(param)\r\n   //console.warn(\"fecha\", fecha, fecha.getDay())\r\n   return dias[fecha.getDay()]+\", \"+fecha.getDate()+\"/\"+(fecha.getMonth()+1)+\"/\"+fecha.getFullYear()\r\n}\r\n\r\nexport { formatTimestamp, dateWithFormat, dateWithFormatFromTime, dateWithNumberFormatFromTime }\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { UserContext } from \"../../Context/UserContext\"\r\nimport Layout from \"../../panelLayout/Layout\"\r\nimport Breadcrumb from \"../../panelLayout/Breadcrumb\"\r\nimport { dateWithFormatFromTime } from \"../../Utilities/DateUtilities.js\"\r\n\r\nexport default function Invoices() {\r\n    const { user } = useContext(UserContext)\r\n\r\n    const [invoices, setInvoices] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <Layout title=\"Mis Facturas\">\r\n            <div className=\"content-body\">\r\n                <div className=\"container-fluid\">\r\n                    <Breadcrumb pageTitles={[\"Inicio\", \"Mis Facturas\"]} />\r\n                    <React.Fragment>\r\n                        {invoices === undefined ? (\r\n                            <div></div>\r\n                        ) : (\r\n                            <div className=\"row\">\r\n                                {invoices === null ? (\r\n                                    <div className=\"col-xl-12\">\r\n                                        <div className=\"alert alert-warning left-icon-big alert-dismissible fade show\">\r\n                                            <div className=\"media\">\r\n                                                <div className=\"alert-left-icon-big\">\r\n                                                    <span>\r\n                                                        <i className=\"mdi mdi-help-circle-outline\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"media-body\">\r\n                                                    <h5 className=\"mt-1 mb-2\">Vacío</h5>\r\n                                                    <p className=\"mb-0\">Aún no tienes ninguna factura.</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"col-xl-12\">\r\n                                        <div className=\"table-responsive table-hover fs-14\">\r\n                                            <table className=\"table display mb-4 dataTablesCard  card-table\" id=\"example5\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th></th>\r\n                                                        <th>Fecha</th>\r\n                                                        {/* <th>Moneda</th> */}\r\n                                                        <th>Monto</th>\r\n                                                        <th>Asunto</th>\r\n                                                        <th>Status</th>\r\n                                                        <th></th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {Object.keys(invoices).map((index, i) => {\r\n                                                        let invoice = invoices[index]\r\n                                                        return (\r\n                                                            <tr key={i}>\r\n                                                                <td className=\"pr-0\">\r\n                                                                    {invoice.cancelled ? (\r\n                                                                        <span className=\"bgl-danger p-3 d-inline-block\">\r\n                                                                            <svg\r\n                                                                                viewBox=\"0 0 24 24\"\r\n                                                                                width=\"24\"\r\n                                                                                height=\"24\"\r\n                                                                                stroke=\"currentColor\"\r\n                                                                                strokeWidth=\"2\"\r\n                                                                                fill=\"none\"\r\n                                                                                strokeLinecap=\"round\"\r\n                                                                                strokeLinejoin=\"round\"\r\n                                                                                className=\"mr-2\"\r\n                                                                            >\r\n                                                                                <polygon\r\n                                                                                    points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"\r\n                                                                                    stroke=\"#FF2E2E\"\r\n                                                                                ></polygon>\r\n                                                                                <line\r\n                                                                                    x1=\"15\"\r\n                                                                                    y1=\"9\"\r\n                                                                                    x2=\"9\"\r\n                                                                                    y2=\"15\"\r\n                                                                                    stroke=\"#FF2E2E\"\r\n                                                                                ></line>\r\n                                                                                <line\r\n                                                                                    x1=\"9\"\r\n                                                                                    y1=\"9\"\r\n                                                                                    x2=\"15\"\r\n                                                                                    y2=\"15\"\r\n                                                                                    stroke=\"#FF2E2E\"\r\n                                                                                ></line>\r\n                                                                            </svg>\r\n                                                                        </span>\r\n                                                                    ) : invoice.paid ? (\r\n                                                                        <span className=\"bgl-success p-3 d-inline-block\">\r\n                                                                            <svg\r\n                                                                                viewBox=\"0 0 24 24\"\r\n                                                                                width=\"24\"\r\n                                                                                height=\"24\"\r\n                                                                                stroke=\"currentColor\"\r\n                                                                                strokeWidth=\"2\"\r\n                                                                                fill=\"none\"\r\n                                                                                strokeLinecap=\"round\"\r\n                                                                                strokeLinejoin=\"round\"\r\n                                                                                className=\"mr-2\"\r\n                                                                            >\r\n                                                                                <polyline\r\n                                                                                    points=\"9 11 12 14 22 4\"\r\n                                                                                    stroke=\"#22AA22\"\r\n                                                                                ></polyline>\r\n                                                                                <path\r\n                                                                                    d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"\r\n                                                                                    stroke=\"#22AA22\"\r\n                                                                                ></path>\r\n                                                                            </svg>\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"bgl-danger p-3 d-inline-block\">\r\n                                                                            <svg\r\n                                                                                viewBox=\"0 0 24 24\"\r\n                                                                                width=\"24\"\r\n                                                                                height=\"24\"\r\n                                                                                stroke=\"currentColor\"\r\n                                                                                strokeWidth=\"2\"\r\n                                                                                fill=\"none\"\r\n                                                                                strokeLinecap=\"round\"\r\n                                                                                strokeLinejoin=\"round\"\r\n                                                                                className=\"mr-2\"\r\n                                                                            >\r\n                                                                                <circle\r\n                                                                                    cx=\"12\"\r\n                                                                                    cy=\"12\"\r\n                                                                                    r=\"10\"\r\n                                                                                    stroke=\"#2B98D6\"\r\n                                                                                ></circle>\r\n                                                                                <line\r\n                                                                                    x1=\"12\"\r\n                                                                                    y1=\"16\"\r\n                                                                                    x2=\"12\"\r\n                                                                                    y2=\"12\"\r\n                                                                                    stroke=\"#2B98D6\"\r\n                                                                                ></line>\r\n                                                                                <line\r\n                                                                                    x1=\"12\"\r\n                                                                                    y1=\"8\"\r\n                                                                                    x2=\"12.01\"\r\n                                                                                    y2=\"8\"\r\n                                                                                    stroke=\"#2B98D6\"\r\n                                                                                ></line>\r\n                                                                            </svg>\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className=\"wspace-no\">\r\n                                                                    {dateWithFormatFromTime(invoice.createdAt)}\r\n                                                                </td>\r\n                                                                {/* <td className=\"wspace-no\">\r\n                                                                    <svg\r\n                                                                        className=\"mr-1\"\r\n                                                                        width=\"24\"\r\n                                                                        height=\"24\"\r\n                                                                        viewBox=\"0 0 24 24\"\r\n                                                                        fill=\"none\"\r\n                                                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                    >\r\n                                                                        <path\r\n                                                                            d=\"M16 9.50011C15.9993 8.67201 15.328 8.00092 14.5001 8H10V11H14.5001C15.328 10.9993 15.9993 10.328 16 9.50011Z\"\r\n                                                                            fill=\"#FFAB2D\"\r\n                                                                        />\r\n                                                                        <path\r\n                                                                            d=\"M10 16H14.5001C15.3285 16 16 15.3285 16 14.5001C16 13.6715 15.3285 13 14.5001 13H10V16Z\"\r\n                                                                            fill=\"#FFAB2D\"\r\n                                                                        />\r\n                                                                        <path\r\n                                                                            d=\"M12 0C5.3726 0 0 5.3726 0 12C0 18.6274 5.3726 24 12 24C18.6274 24 24 18.6274 24 12C23.9924 5.37574 18.6243 0.00758581 12 0ZM18.0001 14.5713C17.9978 16.4641 16.4641 17.9978 14.5716 17.9999V18.8571C14.5716 19.3305 14.1876 19.7143 13.7144 19.7143C13.2409 19.7143 12.8572 19.3305 12.8572 18.8571V17.9999H11.1431V18.8571C11.1431 19.3305 10.7591 19.7143 10.2859 19.7143C9.8124 19.7143 9.42866 19.3305 9.42866 18.8571V17.9999H6.85733C6.38387 17.9999 6.00013 17.6161 6.00013 17.1429C6.00013 16.6695 6.38387 16.2857 6.85733 16.2857H7.71427V7.71427H6.85733C6.38387 7.71427 6.00013 7.33053 6.00013 6.85707C6.00013 6.38361 6.38387 5.99987 6.85733 5.99987H9.42866V5.14293C9.42866 4.66947 9.8124 4.28573 10.2859 4.28573C10.7593 4.28573 11.1431 4.66947 11.1431 5.14293V5.99987H12.8572V5.14293C12.8572 4.66947 13.2409 4.28573 13.7144 4.28573C14.1879 4.28573 14.5716 4.66947 14.5716 5.14293V5.99987C16.4571 5.99202 17.992 7.5139 18.0001 9.39937C18.0043 10.3978 17.5714 11.3481 16.8152 12C17.5643 12.6445 17.9967 13.5828 18.0001 14.5713Z\"\r\n                                                                            fill=\"#FFAB2D\"\r\n                                                                        />\r\n                                                                    </svg>\r\n                                                                    Bitcoin\r\n                                                                </td> */}\r\n                                                                <td>\r\n                                                                    <span className=\"text-success font-w700\">\r\n                                                                        ${invoice.amount}\r\n                                                                    </span>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <p className=\"mb-0 wspace-no\">{invoice.subject}</p>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span\r\n                                                                        className={`text-${\r\n                                                                            invoice.cancelled\r\n                                                                                ? \"danger\"\r\n                                                                                : invoice.paid\r\n                                                                                ? \"success\"\r\n                                                                                : \"primary\"\r\n                                                                        } float-right`}\r\n                                                                    >\r\n                                                                        {invoice.status}\r\n                                                                    </span>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <NavLink to={`/invoice/${index}`} className=\"btn btn-info btn-xs btn-rounded\">Ver detalles</NavLink>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </React.Fragment>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { UserContext } from \"../../Context/UserContext\"\r\nimport Layout from \"../../panelLayout/Layout\"\r\nimport Breadcrumb from \"../../panelLayout/Breadcrumb\"\r\nimport { dateWithFormatFromTime } from \"../../Utilities/DateUtilities.js\"\r\n\r\nexport default function Payments() {\r\n    const { user } = useContext(UserContext)\r\n\r\n    const [payments, setPayments] = useState(undefined)\r\n\r\n    const [total, setTotal] = useState(\"Calculando...\")\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (payments) {\r\n            let totalPayments = 0\r\n            for (const index in payments) {\r\n                const payment = payments[index]\r\n                if (payment.pending) totalPayments += payment.amount\r\n            }\r\n            setTotal(totalPayments)\r\n        }\r\n    }, [payments])\r\n\r\n    return (\r\n        <Layout title=\"Mis pagos\">\r\n            <div className=\"content-body\">\r\n                <div className=\"container-fluid\">\r\n                    <Breadcrumb pageTitles={[\"Inicio\", \"Mis pagos\"]} />\r\n                    <React.Fragment>\r\n                        {payments === undefined ? (\r\n                            <div></div>\r\n                        ) : (\r\n                            <div className=\"row\">\r\n                                {payments === null ? (\r\n                                    <div className=\"col-xl-12\">\r\n                                        <div className=\"alert alert-warning left-icon-big alert-dismissible fade show\">\r\n                                            <div className=\"media\">\r\n                                                <div className=\"alert-left-icon-big\">\r\n                                                    <span>\r\n                                                        <i className=\"mdi mdi-help-circle-outline\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"media-body\">\r\n                                                    <h5 className=\"mt-1 mb-2\">Vacío</h5>\r\n                                                    <p className=\"mb-0\">Aún no tienes nungun pago.</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"col-xl-12\">\r\n                                        <div className=\"alert alert-info alert-dismissible fade show\">\r\n                                            <svg\r\n                                                viewBox=\"0 0 24 24\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                                stroke=\"currentColor\"\r\n                                                stroke-width=\"2\"\r\n                                                fill=\"none\"\r\n                                                stroke-linecap=\"round\"\r\n                                                stroke-linejoin=\"round\"\r\n                                                className=\"mr-2\"\r\n                                            >\r\n                                                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                                                <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\r\n                                                <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\r\n                                            </svg>\r\n                                            Tienes la posibilidad de retirar el saldo que gustes. Pero ten en cuenta que\r\n                                            se te cobrara el fee de transacción.\r\n                                            <br />\r\n                                            <strong>Tip:</strong> Acumula varios pagos para no pagar demasiado de fee.\r\n                                        </div>\r\n                                        <div className=\"table-responsive table-hover fs-14\">\r\n                                            <table\r\n                                                className=\"table display mb-4 dataTablesCard  card-table\"\r\n                                                id=\"example5\"\r\n                                            >\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th></th>\r\n                                                        <th>Fecha</th>\r\n                                                        <th>Monto</th>\r\n                                                        <th>Asunto</th>\r\n                                                        <th>Status</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {Object.keys(payments).map((index, i) => {\r\n                                                        let payment = payments[index]\r\n                                                        return (\r\n                                                            <tr key={i}>\r\n                                                                <td className=\"pr-0\">\r\n                                                                    {payment.cancelled ? (\r\n                                                                        <span className=\"bgl-danger p-3 d-inline-block\">\r\n                                                                            <svg\r\n                                                                                viewBox=\"0 0 24 24\"\r\n                                                                                width=\"24\"\r\n                                                                                height=\"24\"\r\n                                                                                stroke=\"currentColor\"\r\n                                                                                strokeWidth=\"2\"\r\n                                                                                fill=\"none\"\r\n                                                                                strokeLinecap=\"round\"\r\n                                                                                strokeLinejoin=\"round\"\r\n                                                                                className=\"mr-2\"\r\n                                                                            >\r\n                                                                                <polygon\r\n                                                                                    points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"\r\n                                                                                    stroke=\"#FF2E2E\"\r\n                                                                                ></polygon>\r\n                                                                                <line\r\n                                                                                    x1=\"15\"\r\n                                                                                    y1=\"9\"\r\n                                                                                    x2=\"9\"\r\n                                                                                    y2=\"15\"\r\n                                                                                    stroke=\"#FF2E2E\"\r\n                                                                                ></line>\r\n                                                                                <line\r\n                                                                                    x1=\"9\"\r\n                                                                                    y1=\"9\"\r\n                                                                                    x2=\"15\"\r\n                                                                                    y2=\"15\"\r\n                                                                                    stroke=\"#FF2E2E\"\r\n                                                                                ></line>\r\n                                                                            </svg>\r\n                                                                        </span>\r\n                                                                    ) : payment.paid ? (\r\n                                                                        <span className=\"bgl-success p-3 d-inline-block\">\r\n                                                                            <svg\r\n                                                                                viewBox=\"0 0 24 24\"\r\n                                                                                width=\"24\"\r\n                                                                                height=\"24\"\r\n                                                                                stroke=\"currentColor\"\r\n                                                                                strokeWidth=\"2\"\r\n                                                                                fill=\"none\"\r\n                                                                                strokeLinecap=\"round\"\r\n                                                                                strokeLinejoin=\"round\"\r\n                                                                                className=\"mr-2\"\r\n                                                                            >\r\n                                                                                <polyline\r\n                                                                                    points=\"9 11 12 14 22 4\"\r\n                                                                                    stroke=\"#22AA22\"\r\n                                                                                ></polyline>\r\n                                                                                <path\r\n                                                                                    d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"\r\n                                                                                    stroke=\"#22AA22\"\r\n                                                                                ></path>\r\n                                                                            </svg>\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"bgl-danger p-3 d-inline-block\">\r\n                                                                            <svg\r\n                                                                                viewBox=\"0 0 24 24\"\r\n                                                                                width=\"24\"\r\n                                                                                height=\"24\"\r\n                                                                                stroke=\"currentColor\"\r\n                                                                                strokeWidth=\"2\"\r\n                                                                                fill=\"none\"\r\n                                                                                strokeLinecap=\"round\"\r\n                                                                                strokeLinejoin=\"round\"\r\n                                                                                className=\"mr-2\"\r\n                                                                            >\r\n                                                                                <circle\r\n                                                                                    cx=\"12\"\r\n                                                                                    cy=\"12\"\r\n                                                                                    r=\"10\"\r\n                                                                                    stroke=\"#2B98D6\"\r\n                                                                                ></circle>\r\n                                                                                <line\r\n                                                                                    x1=\"12\"\r\n                                                                                    y1=\"16\"\r\n                                                                                    x2=\"12\"\r\n                                                                                    y2=\"12\"\r\n                                                                                    stroke=\"#2B98D6\"\r\n                                                                                ></line>\r\n                                                                                <line\r\n                                                                                    x1=\"12\"\r\n                                                                                    y1=\"8\"\r\n                                                                                    x2=\"12.01\"\r\n                                                                                    y2=\"8\"\r\n                                                                                    stroke=\"#2B98D6\"\r\n                                                                                ></line>\r\n                                                                            </svg>\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className=\"wspace-no\">\r\n                                                                    {dateWithFormatFromTime(payment.createdAt)}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span className=\"text-success font-w700\">\r\n                                                                        ${payment.amount}\r\n                                                                    </span>\r\n                                                                </td>\r\n                                                                <td style={{maxWidth:\"500px\"}}>\r\n                                                                    <p className=\"mb-0\">{payment.subject}</p>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span\r\n                                                                        className={`text-${\r\n                                                                            payment.cancelled\r\n                                                                                ? \"danger\"\r\n                                                                                : payment.paid\r\n                                                                                ? \"success\"\r\n                                                                                : \"primary\"\r\n                                                                        } float-right`}\r\n                                                                    >\r\n                                                                        {payment.status}\r\n                                                                    </span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className=\"pt-3 d-flex justify-content-end\">\r\n                                            <div className=\"text-right\">Total disponible:</div>\r\n                                            <div className=\"text-success font-w700\">$ {total}</div>\r\n                                        </div>\r\n                                        <div className=\"pt-2 d-flex justify-content-end\">\r\n                                            {\" \"}\r\n                                            Comunicate al chat de telegram mediante <a href=\"#\">este link</a>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </React.Fragment>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { NavLink, Redirect, useParams } from \"react-router-dom\"\r\nimport { UserContext } from \"../../Context/UserContext\"\r\nimport { LayoutContext } from \"../../Context/LayoutContext\"\r\nimport Layout from \"../../panelLayout/Layout\"\r\nimport Breadcrumb from \"../../panelLayout/Breadcrumb\"\r\nimport { dateWithFormatFromTime } from \"../../Utilities/DateUtilities.js\"\r\n\r\nexport default function Invoice() {\r\n    const { invoiceID } = useParams()\r\n    const { cancelPackageRequestFromUser } = useContext(UserContext)\r\n    const { setLoadingVisible } = useContext(LayoutContext)\r\n\r\n    const [invoice, setInvoice] = useState(undefined)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [packageName, setpackageName] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <Layout title=\"Factura\">\r\n            {redirect && <Redirect to=\"/\" />}\r\n            <div className=\"content-body\">\r\n                <div className=\"container-fluid\">\r\n                    <Breadcrumb pageTitles={[\"Inicio\", \"Factura\", invoiceID]} />\r\n                    <React.Fragment>\r\n                        {invoice === undefined ? (\r\n                            <div></div>\r\n                        ) : (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    {invoice.pending && <div className=\"alert alert-info alert-dismissible fade show\">\r\n                                        <svg\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            width=\"24\"\r\n                                            height=\"24\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            fill=\"none\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            className=\"mr-2\"\r\n                                        >\r\n                                            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                                            <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\r\n                                            <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\r\n                                        </svg>\r\n                                        <strong>IMPORTANTE:</strong> <strong>Al terminar el pago, da clic en regresar al sitio web del comercio</strong> para que la factura se registro como pagada correctamente.\r\n                                    </div>}\r\n                                    <div className=\"card mt-3\">\r\n                                        <div className=\"card-header\">\r\n                                            {\" \"}\r\n                                            Factura <strong>{dateWithFormatFromTime(invoice.createdAt)}</strong>{\" \"}\r\n                                            <span className=\"float-right\">\r\n                                                <strong>Estado:</strong>{\" \"}\r\n                                                <span\r\n                                                    className={`text-${\r\n                                                        invoice.cancelled\r\n                                                            ? \"danger\"\r\n                                                            : invoice.paid\r\n                                                            ? \"success\"\r\n                                                            : \"primary\"\r\n                                                    }`}\r\n                                                >\r\n                                                    {invoice.status}\r\n                                                </span>\r\n                                            </span>{\" \"}\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-striped\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Paquete</th>\r\n                                                            <th>Descripción</th>\r\n                                                            <th className=\"right\">Costo</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td className=\"left strong\">{invoice.packageID}</td>\r\n                                                            <td className=\"left\">{invoice.subject}</td>\r\n                                                            <td className=\"right\">${invoice.amount}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-4 col-sm-5\"> </div>\r\n                                                <div className=\"col-lg-4 col-sm-5 ml-auto\">\r\n                                                    <table className=\"table table-clear\">\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td className=\"left\">\r\n                                                                    <strong>Total</strong>\r\n                                                                </td>\r\n                                                                <td className=\"right\">\r\n                                                                    <strong>${invoice.amount} USD</strong>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                            {invoice.pending && (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-4 col-sm-5\"> </div>\r\n                                                    <div className=\"col-lg-4 col-sm-5 ml-auto d-flex align-items-center\">\r\n                                                        <form\r\n                                                            action=\"https://www.coinpayments.net/index.php\"\r\n                                                            method=\"post\"\r\n                                                            className=\"mr-3 d-flex align-items-center\"\r\n                                                        >\r\n                                                            <input type=\"hidden\" name=\"cmd\" value=\"_pay_simple\" />\r\n                                                            <input type=\"hidden\" name=\"reset\" value=\"1\" />\r\n                                                            <input\r\n                                                                type=\"hidden\"\r\n                                                                name=\"merchant\"\r\n                                                                value=\"993161eb0f76ff4c4e4354292524561a\"\r\n                                                            />\r\n                                                            <input\r\n                                                                type=\"hidden\"\r\n                                                                name=\"item_name\"\r\n                                                                value={`Paquete ${packageName} - CriptoEstrategias`}\r\n                                                            />\r\n                                                            <input type=\"hidden\" name=\"currency\" value=\"USD\" />\r\n                                                            <input\r\n                                                                type=\"hidden\"\r\n                                                                name=\"amountf\"\r\n                                                                value={invoice.amount}\r\n                                                            />\r\n                                                            <input\r\n                                                                type=\"hidden\"\r\n                                                                name=\"success_url\"\r\n                                                                value={\r\n                                                                    window.location.origin +\r\n                                                                    \"/gvDWrxqqrGjPZGtNAqGYsTLqYDGNhTzwdhEAcsJPWaGGmjLGGwGsBafJnqcDFySqWZfxvLgaPKVPGjZDtkvJfHELZkNWPWqxNXFbSsVSNFeuPksDbtZbThgfWndQxXKt/\" +\r\n                                                                    invoice.userID +\r\n                                                                    \"/\" +\r\n                                                                    invoiceID\r\n                                                                }\r\n                                                            />\r\n                                                            <input\r\n                                                                type=\"hidden\"\r\n                                                                name=\"cancel_url\"\r\n                                                                value={window.location.href}\r\n                                                            />\r\n                                                            <input\r\n                                                                type=\"image\"\r\n                                                                src=\"https://www.coinpayments.net/images/pub/buynow-grey.png\"\r\n                                                                alt=\"Pagar ahora con CoinPayments.net\"\r\n                                                            />\r\n                                                        </form>\r\n                                                        {!invoice.generated && (\r\n                                                            <React.Fragment>\r\n                                                                <button\r\n                                                                    type=\"button\"\r\n                                                                    className=\"btn light btn-danger btn-xs btn-rounded p-3\"\r\n                                                                    data-toggle=\"modal\"\r\n                                                                    data-target=\"#modalCancel\"\r\n                                                                >\r\n                                                                    Cancelar factura\r\n                                                                </button>\r\n                                                                <div\r\n                                                                    className=\"modal fade\"\r\n                                                                    id=\"modalCancel\"\r\n                                                                    style={{ display: \"none\" }}\r\n                                                                    aria-hidden=\"true\"\r\n                                                                >\r\n                                                                    <div\r\n                                                                        className=\"modal-dialog modal-dialog-centered\"\r\n                                                                        role=\"document\"\r\n                                                                    >\r\n                                                                        <div className=\"modal-content\">\r\n                                                                            <div className=\"modal-header\">\r\n                                                                                <h5 className=\"modal-title\">\r\n                                                                                    ¿Deseas cancelar la factura?\r\n                                                                                </h5>\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"close\"\r\n                                                                                    data-dismiss=\"modal\"\r\n                                                                                >\r\n                                                                                    <span>×</span>\r\n                                                                                </button>\r\n                                                                            </div>\r\n                                                                            <div className=\"modal-footer d-flex justify-content-center\">\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-secondary light\"\r\n                                                                                    data-dismiss=\"modal\"\r\n                                                                                >\r\n                                                                                    Regresar\r\n                                                                                </button>\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-primary\"\r\n                                                                                    data-dismiss=\"modal\"\r\n                                                                                    onClick={async () => {\r\n                                                                                        setLoadingVisible(true)\r\n                                                                                        await cancelPackageRequestFromUser()\r\n                                                                                        setLoadingVisible(false)\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    Confirmar cancelación\r\n                                                                                </button>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </React.Fragment>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </React.Fragment>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { LayoutContext } from \"../../Context/LayoutContext\"\r\nimport Loading from \"../../panelLayout/Loading/Loading\"\r\nimport \"./ContainerForm.css\"\r\n\r\nexport default function ContainerForm({ children }) {\r\n    const { loadingVisible } = useContext(LayoutContext)\r\n    return (\r\n        <div className=\"authincation h-100\">\r\n        <Loading visible={loadingVisible} />\r\n            <div className=\"container h-100\">\r\n                <div className=\"row justify-content-center h-100 align-items-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"authincation-content\">\r\n                            <div className=\"row no-gutters\">\r\n                                <div className=\"col-xl-12\">\r\n                                    <div className=\"auth-form\">{children}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function TextInput({ id, label, placeholder, className, value, onChange, required, pattern }) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n                <strong>{label}</strong>\r\n            </label>\r\n            <input\r\n                id={id}\r\n                type=\"text\"\r\n                className={`form-control ${className}`}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                required={required}\r\n                pattern={pattern}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function SubmitButton({ id, className, value = \"Enviar\" }) {\r\n    return (\r\n        <div className=\"text-center mt-4\">\r\n            <button id={id} type=\"submit\" className={`btn btn-primary btn-block ${className}`}>\r\n                {value}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { UserContext } from \"../../Context/UserContext\"\r\nimport { LayoutContext } from \"../../Context/LayoutContext\"\r\nimport Layout from \"../../panelLayout/Layout\"\r\nimport TextInput from \"../../Components/TextInput/TextInput\"\r\nimport SubmitInput from \"../../Components/SubmitButton/SubmitButton\"\r\n\r\nexport default function UpdateUser() {\r\n    const { user, updateUserInfo } = useContext(UserContext)\r\n    const { setLoadingVisible } = useContext(LayoutContext)\r\n\r\n    const [errorField, seterrorField] = useState(\"\")\r\n\r\n    const [redirect, setRedirect] = useState(undefined)\r\n\r\n    const [userInfo, setUserInfo] = useState({\r\n        name: \"\",\r\n        telegramID: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        setUserInfo({ name: user.name, telegramID: user.telegramID })\r\n    }, [user])\r\n\r\n    const OnSubmit = async (event) => {\r\n        event.preventDefault()\r\n        setLoadingVisible(true)\r\n\r\n        const { name, telegramID } = userInfo\r\n\r\n        if (!name.trim() || !telegramID.trim()) {\r\n            seterrorField(\"Todos los campos son obligatorios\")\r\n            return\r\n        }\r\n\r\n        const result = await updateUserInfo(name, telegramID)\r\n\r\n        console.log(result)\r\n\r\n        setLoadingVisible(false)\r\n        if (!result) {\r\n            seterrorField(\"Ocurrio un error, intente mas tarde\")\r\n            return\r\n        }\r\n        setRedirect(true)\r\n    }\r\n\r\n    const OnChangeText = (event) => {\r\n        const { id, value } = event.target\r\n        seterrorField(\"\")\r\n        setUserInfo({\r\n            ...userInfo,\r\n            ...{\r\n                [id]: value,\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Actualizar información\">\r\n            <div className=\"content-body\">\r\n                {redirect && <Redirect to=\"/\" />}\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"card-title\">\r\n                                        Actualizar información\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <form onSubmit={OnSubmit}>\r\n                                            <TextInput\r\n                                                id=\"name\"\r\n                                                label=\"Nombre completo\"\r\n                                                value={userInfo.name}\r\n                                                onChange={OnChangeText}\r\n                                                required={true}\r\n                                            />\r\n                                            <TextInput\r\n                                                id=\"telegramID\"\r\n                                                label=\"ID de Telegram\"\r\n                                                value={userInfo.telegramID}\r\n                                                onChange={OnChangeText}\r\n                                                required={true}\r\n                                                pattern=\"[0-9]+\"\r\n                                            />\r\n                                            <SubmitInput value=\"Guardar\" />\r\n                                        </form>\r\n                                        <div className=\"mt-3\">\r\n                                            <p className=\"text-center\">{errorField}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function UsernameInput({ id, className, value, onChange, required }) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n                <strong>Nombre de usuario</strong>\r\n            </label>\r\n            <input\r\n                id={id}\r\n                type=\"text\"\r\n                className={`form-control ${className}`}\r\n                placeholder=\"Usuario\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required={required}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function PasswordInput({ id, className, value, confirmation, onChange, required }) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n                <strong>{confirmation ? \"Confirmación de contraseña\" : \"Contraseña\"}</strong>\r\n            </label>\r\n            <input\r\n                id={id}\r\n                type=\"password\"\r\n                className={`form-control ${className}`}\r\n                placeholder=\"Contraseña\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required={required}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../../Context/UserContext\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport UsernameInput from \"../../Components/UsernameInput/UsernameInput\";\r\nimport PasswordInput from \"../../Components/PasswordInput/PasswordInput\";\r\nimport SubmitInput from \"../../Components/SubmitButton/SubmitButton\";\r\n\r\nexport default function SignIn() {\r\n    const { signInUser, isAnUserAuthenticated } = useContext(UserContext);\r\n\r\n    const [errorField, seterrorField] = useState(\"\");\r\n\r\n    const [redirect, setRedirect] = useState(undefined);\r\n\r\n    const [user, setUser] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        setRedirect(isAnUserAuthenticated() ? \"/\" : false);\r\n    }, []);\r\n\r\n    const OnSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const { username, password } = user;\r\n\r\n        if (!username.trim() || !password.trim()) {\r\n            seterrorField(\"Todos los campos son obligatorios\");\r\n            return;\r\n        }\r\n\r\n        const result = await signInUser(username, password);\r\n\r\n        if (!result) {\r\n            seterrorField(\"Ocurrio un error, intente mas tarde\");\r\n            return;\r\n        } else if (result.message) {\r\n            seterrorField(result.message);\r\n            return;\r\n        }\r\n        setRedirect(\"/\");\r\n    };\r\n\r\n    const OnChangeText = (event) => {\r\n        const { id, value } = event.target;\r\n        seterrorField(\"\");\r\n        setUser({\r\n            ...user,\r\n            ...{\r\n                [id]: value,\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {redirect === undefined ? (\r\n                <div></div>\r\n            ) : redirect ? (\r\n                <Redirect to={redirect} />\r\n            ) : (\r\n                <React.Fragment>\r\n                    <h3 className=\"text-center mb-4\">Acceder</h3>\r\n                    <form onSubmit={OnSubmit}>\r\n                        <UsernameInput id=\"username\" value={user.username} onChange={OnChangeText} required={true} />\r\n                        <PasswordInput id=\"password\" value={user.password} onChange={OnChangeText} required={true} />\r\n                        <SubmitInput value=\"Acceder\" />\r\n                    </form>\r\n                    <div className=\"mt-3\">\r\n                        <p className=\"text-center\">{errorField}</p>\r\n                    </div>\r\n                    <div className=\"new-account mt-3\">\r\n                        <p>\r\n                            ¿No tienes una cuenta?{\" \"}\r\n                            <NavLink to=\"/signup\" className=\"text-primary\">\r\n                                Registrate\r\n                            </NavLink>\r\n                        </p>\r\n                    </div>\r\n                </React.Fragment>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function EmailInput({ id, className, value, onChange, required }) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n                <strong>Email</strong>\r\n            </label>\r\n            <input\r\n                id={id}\r\n                type=\"email\"\r\n                className={`form-control ${className}`}\r\n                placeholder=\"email@ejemplo.com\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required={required}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\"\r\nimport { UserContext } from \"../../Context/UserContext\"\r\nimport { LayoutContext } from \"../../Context/LayoutContext\"\r\nimport { NavLink, Redirect } from \"react-router-dom\"\r\nimport EmailInput from \"../../Components/EmailInput/EmailInput\"\r\nimport TextInput from \"../../Components/TextInput/TextInput\"\r\nimport PasswordInput from \"../../Components/PasswordInput/PasswordInput\"\r\nimport SubmitInput from \"../../Components/SubmitButton/SubmitButton\"\r\n\r\nexport default function SignUp() {\r\n    const { signUpUser, isAnUserAuthenticated } = useContext(UserContext)\r\n    const { setLoadingVisible } = useContext(LayoutContext)\r\n\r\n    const [errorField, seterrorField] = useState(\"\")\r\n\r\n    const [redirect, setRedirect] = useState(undefined)\r\n\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirmation: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isAnUserAuthenticated !== undefined) setRedirect(isAnUserAuthenticated ? \"/\" : false)\r\n    }, [isAnUserAuthenticated])\r\n\r\n    const OnSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        setLoadingVisible(true)\r\n\r\n        const { name, email, password, passwordConfirmation } = user\r\n\r\n        if (!name.trim() || !email.trim() || !password.trim() || !passwordConfirmation.trim()) {\r\n            seterrorField(\"Todos los campos son obligatorios\")\r\n            setLoadingVisible(false)\r\n            return\r\n        }\r\n\r\n        if (password.trim().length < 6) {\r\n            seterrorField(\"La contraseña debe tener al menos 6 caracteres\")\r\n            setLoadingVisible(false)\r\n            return\r\n        }\r\n\r\n        if (!(password.trim() === passwordConfirmation.trim())) {\r\n            seterrorField(\"Las contraseñas tienen que ser iguales\")\r\n            setLoadingVisible(false)\r\n            return\r\n        }\r\n\r\n        const result = await signUpUser(email, password, name)\r\n\r\n        console.log(result)\r\n\r\n        if (!result) {\r\n            seterrorField(\"Ocurrio un error, intente mas tarde\")\r\n            setLoadingVisible(false)\r\n            return\r\n        }\r\n        setLoadingVisible(false)\r\n        setRedirect(\"/signin\")\r\n    }\r\n\r\n    const OnChangeText = (event) => {\r\n        const { id, value } = event.target\r\n        seterrorField(\"\")\r\n        setUser({\r\n            ...user,\r\n            ...{\r\n                [id]: value,\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {redirect === undefined ? (\r\n                <div></div>\r\n            ) : redirect ? (\r\n                <Redirect to={redirect} />\r\n            ) : (\r\n                <React.Fragment>\r\n                    <h3 className=\"text-center mb-4\">Registrarse</h3>\r\n                    <form onSubmit={OnSubmit}>\r\n                        <TextInput\r\n                            id=\"name\"\r\n                            label=\"Nombre completo\"\r\n                            placeholder=\"Nombre\"\r\n                            value={user.name}\r\n                            onChange={OnChangeText}\r\n                            required={true}\r\n                        />\r\n                        <EmailInput id=\"email\" value={user.email} onChange={OnChangeText} required={true} />\r\n                        <PasswordInput id=\"password\" value={user.password} onChange={OnChangeText} required={true} />\r\n                        <PasswordInput\r\n                            id=\"passwordConfirmation\"\r\n                            confirmation={true}\r\n                            value={user.passwordConfirmation}\r\n                            onChange={OnChangeText}\r\n                            required={true}\r\n                        />\r\n                        <SubmitInput value=\"Registrarse\" />\r\n                    </form>\r\n                    <div className=\"mt-3\">\r\n                        <p className=\"text-center\">{errorField}</p>\r\n                    </div>\r\n                    <div className=\"new-account mt-3\">\r\n                        <p>\r\n                            ¿Ya tienes una cuenta?{\" \"}\r\n                            <NavLink to=\"/signin\" className=\"text-primary\">\r\n                                Acceder\r\n                            </NavLink>\r\n                        </p>\r\n                    </div>\r\n                </React.Fragment>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { UserProvider } from \"./Context/UserContext\";\r\nimport { LayoutProvider } from \"./Context/LayoutContext\";\r\nimport PanelLayout from \"./panelLayout\";\r\nimport Invoices from \"./Pages/Invoices/Invoices\";\r\nimport Payments from \"./Pages/Payments/Payments\";\r\nimport Invoice from \"./Pages/Invoice/Invoice\";\r\nimport ContainerForm from \"./Pages/ContainerForm/ContainerForm\";\r\nimport UpdateUser from \"./Pages/UpdateUser/UpdateUser\";\r\nimport SignIn from \"./Forms/SignIn/SignIn\";\r\nimport SignUp from \"./Forms/SignUp/SignUp\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <UserProvider>\r\n            <Router>\r\n                <Switch>\r\n                    <LayoutProvider>\r\n                        <Route exact path=\"/\">\r\n                            <PanelLayout />\r\n                        </Route>\r\n                        <Route exact path=\"/invoices\">\r\n                            <Invoices />\r\n                        </Route>\r\n                        <Route exact path=\"/payments\">\r\n                            <Payments />\r\n                        </Route>\r\n                        <Route exact path=\"/invoice/:invoiceID\">\r\n                            <Invoice />\r\n                        </Route>\r\n                        <Route exact path=\"/updateUser\">\r\n                            <UpdateUser />\r\n                        </Route>\r\n                        <Route exact path=\"/signin\">\r\n                            <ContainerForm>\r\n                                <SignIn />\r\n                            </ContainerForm>\r\n                        </Route>\r\n                        <Route exact path=\"/signup\">\r\n                            <ContainerForm>\r\n                                <SignUp />\r\n                            </ContainerForm>\r\n                        </Route>\r\n                    </LayoutProvider>\r\n                </Switch>\r\n            </Router>\r\n        </UserProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}